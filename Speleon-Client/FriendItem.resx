<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HeadPortraitLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>